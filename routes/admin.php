<?php

use App\Http\Controllers\Admin\Declarations\Areas\AreaController;
use App\Http\Controllers\Admin\Declarations\Authors\AuthorController;
use App\Http\Controllers\Admin\Declarations\BookCopies\BookCopyController;
use App\Http\Controllers\Admin\Declarations\Books\BookController;
use App\Http\Controllers\Admin\Declarations\Categories\CategoryController;
use App\Http\Controllers\Admin\Declarations\Positions\PositionController;
use App\Http\Controllers\Admin\Declarations\Posts\PostController;
use App\Http\Controllers\Admin\Declarations\Publishers\PublisherController;
use App\Http\Controllers\Admin\Declarations\Series\SeriesController;
use App\Http\Controllers\Admin\Declarations\Shelves\ShelfController;
use App\Http\Controllers\Admin\Permissions\PermissionController;
use App\Http\Controllers\Admin\Roles\RoleController;
use App\Http\Controllers\Admin\Users\ProfileController;
use App\Http\Controllers\Admin\Users\UserController;
use Illuminate\Support\Facades\Route;

Route::middleware(['auth'])->prefix('admin')->name('admin.')->group(function () {
    Route::get('/', function () {
        return view('admin.dashboard');
    })->name('index');
    Route::prefix('users')->name('users.')->group(function () { // Ch·ª©c nƒÉng qu·∫£n l√Ω t√†i kho·∫£n
        Route::middleware(['canAny:view_users'])->get('/index', [UserController::class, 'index'])->name('index'); // Hi·ªÉn th·ªã danh s√°ch t√†i kho·∫£n
        Route::middleware(['canAny:create_users'])->get('/create', [UserController::class, 'create'])->name('create'); // Hi·ªÉn th·ªã form t·∫°o t√†i kho·∫£n
        Route::middleware(['canAny:create_users'])->post('/store', [UserController::class, 'store'])->name('store'); // X·ª≠ l√Ω t·∫°o t√†i kho·∫£n
        Route::middleware(['canAny:edit_users'])->get('/edit/{id}', [UserController::class, 'edit'])->name('edit'); // Hi·ªÉn th·ªã form ch·ªânh s·ª≠a
        Route::middleware(['canAny:edit_users'])->post('/update/{id}', [UserController::class, 'update'])->name('update'); // X·ª≠ l√Ω ch·ªânh s·ª≠a
        Route::middleware(['canAny:delete_users'])->post('/delete/{id}', [UserController::class, 'delete'])->name('delete'); // X·ª≠ l√Ω x√≥a
        // üöÄ Hi·ªÉn th·ªã giao di·ªán ph√¢n vai tr√≤
        Route::middleware(['canAny:assign_users'])->get('/assign-roles/{id}', [UserController::class, 'showAssignRolesForm'])->name('showAssignRolesForm');
        // üöÄ X·ª≠ l√Ω g√°n vai tr√≤ cho ng∆∞·ªùi d√πng
        Route::middleware(['canAny:assign_users'])->post('/assign-roles/{id}', [UserController::class, 'assignRoles'])->name('assignRoles');
        Route::middleware(['canAny:edit_users'])->post('/toggle-block/{id}', [UserController::class, 'changeStatus'])->name('toggleBlock');
    });

    Route::prefix('profiles')->name('profiles.')->group(function () { // Ch·ª©c nƒÉng qu·∫£n l√Ω h·ªì s∆°
        Route::middleware(['canAny:edit_users'])->get('/edit/{user_id}', [ProfileController::class, 'edit'])->name('edit'); // Hi·ªÉn th·ªã form ch·ªânh s·ª≠a
        Route::middleware(['canAny:edit_users'])->post('/update/{user_id}', [ProfileController::class, 'update'])->name('update'); // X·ª≠ l√Ω ch·ªânh s·ª≠a
    });

    Route::prefix('roles')->name('roles.')->group(function () { // Ch·ª©c nƒÉng qu·∫£n l√Ω vai tr√≤
        Route::middleware(['canAny:view_roles'])->get('/index', [RoleController::class, 'index'])->name('index'); // Hi·ªÉn th·ªã danh s√°ch vai tr√≤
        Route::middleware(['canAny:create_roles'])->get('/create', [RoleController::class, 'create'])->name('create'); // Hi·ªÉn th·ªã form t·∫°o m·ªõi vai tr√≤
        Route::middleware(['canAny:create_roles'])->post('/store', [RoleController::class, 'store'])->name('store'); // X·ª≠ l√Ω th√™m m·ªõi vai tr√≤
        Route::middleware(['canAny:edit_roles'])->get('/edit/{id}', [RoleController::class, 'edit'])->name('edit');
        Route::middleware(['canAny:edit_roles'])->post('/update/{id}', [RoleController::class, 'update'])->name('update');
        Route::middleware(['canAny:delete_roles'])->delete('/delete/{id}', [RoleController::class, 'delete'])->name('delete');
        Route::middleware(['canAny:view_roles'])->get('/autocomplete', [RoleController::class, 'autocomplete'])->name('autocomplete'); // L·∫•y vai tr√≤ theo t·ª´
    });

    Route::prefix('permissions')->name('permissions.')->group(function () { // Ch·ª©c nƒÉng qu·∫£n l√Ω quy·ªÅn
        Route::middleware(['canAny:view_permissions'])->get('/index', [PermissionController::class, 'index'])->name('index'); // Hi·ªÉn th·ªã danh s√°ch quy·ªÅn
        Route::middleware(['canAny:create_permissions'])->get('/create', [PermissionController::class, 'create'])->name('create'); // Hi·ªÉn th·ªã form t·∫°o m·ªõi quy·ªÅn
        Route::middleware(['canAny:create_permissions'])->post('/store', [PermissionController::class, 'store'])->name('store'); // X·ª≠ l√Ω th√™m m·ªõi quy·ªÅn
        Route::middleware(['canAny:edit_permissions'])->get('/edit/{id}', [PermissionController::class, 'edit'])->name('edit'); // Hi·ªÉn th·ªã form s·ª≠a quy·ªÅn
        Route::middleware(['canAny:edit_permissions'])->post('/update/{id}', [PermissionController::class, 'update'])->name('update'); // X·ª≠ l√Ω s·ª≠a quy·ªÅn
        Route::middleware(['canAny:delete_permissions'])->delete('/delete/{id}', [PermissionController::class, 'delete'])->name('delete'); // X·ª≠ l√Ω x√≥a quy·ªÅn
        Route::middleware(['canAny:view_permissions'])->get('/autocomplete', [PermissionController::class, 'autocomplete'])->name('autocomplete'); // L·∫•y quy·ªÅn theo t·ª´
    });

    Route::prefix('declarations')->name('declarations.')->group(function () { // Ch·ª©c nƒÉng qu·∫£n l√Ω khai b√°o
        Route::prefix('positions')->name('positions.')->group(function () { // Ch·ª©c nƒÉng qu·∫£n l√Ω ch·ª©c v·ª•
            Route::middleware(['canAny:view_declarations'])->get('/index', [PositionController::class, 'index'])->name('index'); // Hi·ªÉn th·ªã danh s√°ch quy·ªÅn
            Route::middleware(['canAny:create_declarations'])->get('/create', [PositionController::class, 'create'])->name('create'); // Hi·ªÉn th·ªã form t·∫°o m·ªõi quy·ªÅn
            Route::middleware(['canAny:create_declarations'])->post('/store', [PositionController::class, 'store'])->name('store'); // X·ª≠ l√Ω th√™m m·ªõi quy·ªÅn
            Route::middleware(['canAny:edit_declarations'])->get('/edit/{id}', [PositionController::class, 'edit'])->name('edit'); // Hi·ªÉn th·ªã form s·ª≠a quy·ªÅn
            Route::middleware(['canAny:edit_declarations'])->post('/update/{id}', [PositionController::class, 'update'])->name('update'); // X·ª≠ l√Ω s·ª≠a quy·ªÅn
            Route::middleware(['canAny:delete_declarations'])->delete('/delete/{id}', [PositionController::class, 'delete'])->name('delete'); // X·ª≠ l√Ω x√≥a quy·ªÅn
        });

        Route::prefix('areas')->name('areas.')->group(function () { // Ch·ª©c nƒÉng qu·∫£n l√Ω khu v·ª±c
            Route::middleware(['canAny:view_declarations'])->get('/index', [AreaController::class, 'index'])->name('index'); // Hi·ªÉn th·ªã danh s√°ch khu v·ª±c
            Route::middleware(['canAny:create_declarations'])->get('/create', [AreaController::class, 'create'])->name('create'); // Hi·ªÉn th·ªã form t·∫°o m·ªõi khu v·ª±c
            Route::middleware(['canAny:create_declarations'])->post('/store', [AreaController::class, 'store'])->name('store'); // X·ª≠ l√Ω th√™m m·ªõi khu v·ª±c
            Route::middleware(['canAny:edit_declarations'])->get('/edit/{id}', [AreaController::class, 'edit'])->name('edit'); // Hi·ªÉn th·ªã form s·ª≠a khu v·ª±c
            Route::middleware(['canAny:edit_declarations'])->post('/update/{id}', [AreaController::class, 'update'])->name('update'); // X·ª≠ l√Ω s·ª≠a khu v·ª±c
            Route::middleware(['canAny:delete_declarations'])->delete('/delete/{id}', [AreaController::class, 'delete'])->name('delete'); // X·ª≠ l√Ω x√≥a khu v·ª±c
        });

        Route::prefix('authors')->name('authors.')->group(function () { // Ch·ª©c nƒÉng qu·∫£n l√Ω t√°c gi·∫£
            Route::middleware(['canAny:view_declarations'])->get('/index', [AuthorController::class, 'index'])->name('index'); // Hi·ªÉn th·ªã danh s√°ch t√°c gi·∫£
            Route::middleware(['canAny:create_declarations'])->get('/create', [AuthorController::class, 'create'])->name('create'); // Hi·ªÉn th·ªã form t·∫°o m·ªõi t√°c gi·∫£
            Route::middleware(['canAny:create_declarations'])->post('/store', [AuthorController::class, 'store'])->name('store'); // X·ª≠ l√Ω th√™m m·ªõi t√°c gi·∫£
            Route::middleware(['canAny:edit_declarations'])->get('/edit/{id}', [AuthorController::class, 'edit'])->name('edit'); // Hi·ªÉn th·ªã form s·ª≠a t√°c gi·∫£
            Route::middleware(['canAny:edit_declarations'])->post('/update/{id}', [AuthorController::class, 'update'])->name('update'); // X·ª≠ l√Ω s·ª≠a t√°c gi·∫£
            Route::middleware(['canAny:delete_declarations'])->delete('/delete/{id}', [AuthorController::class, 'delete'])->name('delete'); // X·ª≠ l√Ω x√≥a t√°c gi·∫£
        });

        Route::prefix('categories')->name('categories.')->group(function () { // Ch·ª©c nƒÉng qu·∫£n l√Ω danh m·ª•c
            Route::middleware(['canAny:view_declarations'])->get('/index', [CategoryController::class, 'index'])->name('index'); // Hi·ªÉn th·ªã danh s√°ch danh m·ª•c
            Route::middleware(['canAny:create_declarations'])->get('/create', [CategoryController::class, 'create'])->name('create'); // Hi·ªÉn th·ªã form t·∫°o m·ªõi danh m·ª•c
            Route::middleware(['canAny:create_declarations'])->post('/store', [CategoryController::class, 'store'])->name('store'); // X·ª≠ l√Ω th√™m m·ªõi danh m·ª•c
            Route::middleware(['canAny:edit_declarations'])->get('/edit/{id}', [CategoryController::class, 'edit'])->name('edit'); // Hi·ªÉn th·ªã form s·ª≠a danh m·ª•c
            Route::middleware(['canAny:edit_declarations'])->post('/update/{id}', [CategoryController::class, 'update'])->name('update'); // X·ª≠ l√Ω s·ª≠a danh m·ª•c
            Route::middleware(['canAny:delete_declarations'])->delete('/delete/{id}', [CategoryController::class, 'delete'])->name('delete'); // X·ª≠ l√Ω x√≥a danh m·ª•c
        });

        Route::prefix('publishers')->name('publishers.')->group(function () { // Ch·ª©c nƒÉng qu·∫£n l√Ω nh√† xu·∫•t b·∫£n
            Route::middleware(['canAny:view_declarations'])->get('/index', [PublisherController::class, 'index'])->name('index'); // Hi·ªÉn th·ªã danh s√°ch nh√† xu·∫•t b·∫£n
            Route::middleware(['canAny:create_declarations'])->get('/create', [PublisherController::class, 'create'])->name('create'); // Hi·ªÉn th·ªã form t·∫°o m·ªõi nh√† xu·∫•t b·∫£n
            Route::middleware(['canAny:create_declarations'])->post('/store', [PublisherController::class, 'store'])->name('store'); // X·ª≠ l√Ω th√™m m·ªõi nh√† xu·∫•t b·∫£n
            Route::middleware(['canAny:edit_declarations'])->get('/edit/{id}', [PublisherController::class, 'edit'])->name('edit'); // Hi·ªÉn th·ªã form s·ª≠a nh√† xu·∫•t b·∫£n
            Route::middleware(['canAny:edit_declarations'])->post('/update/{id}', [PublisherController::class, 'update'])->name('update'); // X·ª≠ l√Ω s·ª≠a nh√† xu·∫•t b·∫£n
            Route::middleware(['canAny:delete_declarations'])->delete('/delete/{id}', [PublisherController::class, 'delete'])->name('delete'); // X·ª≠ l√Ω x√≥a nh√† xu·∫•t b·∫£n
            Route::middleware(['canAny:edit_declarations'])->get('/autocomplete', [PublisherController::class, 'autocomplete'])->name('autocomplete'); // L·∫•y nh√† xu·∫•t b·∫£n theo t·ª´
        });

        Route::prefix('shelves')->name('shelves.')->group(function () { // Ch·ª©c nƒÉng qu·∫£n l√Ω k·ªá s√°ch
            Route::middleware(['canAny:view_declarations'])->get('/index', [ShelfController::class, 'index'])->name('index'); // Hi·ªÉn th·ªã danh s√°ch k·ªá s√°ch
            Route::middleware(['canAny:create_declarations'])->get('/create', [ShelfController::class, 'create'])->name('create'); // Hi·ªÉn th·ªã form t·∫°o m·ªõi k·ªá s√°ch
            Route::middleware(['canAny:create_declarations'])->post('/store', [ShelfController::class, 'store'])->name('store'); // X·ª≠ l√Ω th√™m m·ªõi k·ªá s√°ch
            Route::middleware(['canAny:edit_declarations'])->get('/edit/{id}', [ShelfController::class, 'edit'])->name('edit'); // Hi·ªÉn th·ªã form s·ª≠a k·ªá s√°ch
            Route::middleware(['canAny:edit_declarations'])->post('/update/{id}', [ShelfController::class, 'update'])->name('update'); // X·ª≠ l√Ω s·ª≠a k·ªá s√°ch
            Route::middleware(['canAny:delete_declarations'])->delete('/delete/{id}', [ShelfController::class, 'delete'])->name('delete'); // X·ª≠ l√Ω x√≥a k·ªá s√°ch
        });

        Route::prefix('series')->name('series.')->group(function () { // Ch·ª©c nƒÉng qu·∫£n l√Ω series
            Route::middleware(['canAny:view_declarations'])->get('/index', [SeriesController::class, 'index'])->name('index'); // Hi·ªÉn th·ªã danh s√°ch series
            Route::middleware(['canAny:create_declarations'])->get('/create', [SeriesController::class, 'create'])->name('create'); // Hi·ªÉn th·ªã form t·∫°o m·ªõi series
            Route::middleware(['canAny:create_declarations'])->post('/store', [SeriesController::class, 'store'])->name('store'); // X·ª≠ l√Ω th√™m m·ªõi series
            Route::middleware(['canAny:edit_declarations'])->get('/edit/{id}', [SeriesController::class, 'edit'])->name('edit'); // Hi·ªÉn th·ªã form s·ª≠a series
            Route::middleware(['canAny:edit_declarations'])->post('/update/{id}', [SeriesController::class, 'update'])->name('update'); // X·ª≠ l√Ω s·ª≠a series
            Route::middleware(['canAny:delete_declarations'])->delete('/delete/{id}', [SeriesController::class, 'delete'])->name('delete'); // X·ª≠ l√Ω x√≥a series
            Route::middleware(['canAny:edit_declarations'])->get('/autocomplete', [SeriesController::class, 'autocomplete'])->name('autocomplete'); // L·∫•y series theo t·ª´
        });

        Route::prefix('posts')->name('posts.')->group(function () { // Ch·ª©c nƒÉng qu·∫£n l√Ω b√†i ƒëƒÉng
            Route::middleware(['canAny:view_declarations'])->get('/index', [PostController::class, 'index'])->name('index'); // Hi·ªÉn th·ªã danh s√°ch b√†i ƒëƒÉng
            Route::middleware(['canAny:create_declarations'])->get('/create', [PostController::class, 'create'])->name('create'); // Hi·ªÉn th·ªã form t·∫°o m·ªõi b√†i ƒëƒÉng
            Route::middleware(['canAny:create_declarations'])->post('/store', [PostController::class, 'store'])->name('store'); // X·ª≠ l√Ω th√™m m·ªõi b√†i ƒëƒÉng
            Route::middleware(['canAny:edit_declarations'])->get('/edit/{id}', [PostController::class, 'edit'])->name('edit'); // Hi·ªÉn th·ªã form s·ª≠a b√†i ƒëƒÉng
            Route::middleware(['canAny:edit_declarations'])->post('/update/{id}', [PostController::class, 'update'])->name('update'); // X·ª≠ l√Ω s·ª≠a b√†i ƒëƒÉng
            Route::middleware(['canAny:delete_declarations'])->delete('/delete/{id}', [PostController::class, 'delete'])->name('delete'); // X·ª≠ l√Ω x√≥a b√†i ƒëƒÉng
        });

        Route::prefix('books')->name('books.')->group(function () { // Ch·ª©c nƒÉng qu·∫£n l√Ω s√°ch
            Route::middleware(['canAny:view_declarations'])->get('/index', [BookController::class, 'index'])->name('index'); // Hi·ªÉn th·ªã danh s√°ch s√°ch
            Route::middleware(['canAny:create_declarations'])->get('/create', [BookController::class, 'create'])->name('create'); // Hi·ªÉn th·ªã form t·∫°o m·ªõi s√°ch
            Route::middleware(['canAny:create_declarations'])->post('/store', [BookController::class, 'store'])->name('store'); // X·ª≠ l√Ω th√™m m·ªõi s√°ch
            Route::middleware(['canAny:edit_declarations'])->get('/edit/{id}', [BookController::class, 'edit'])->name('edit'); // Hi·ªÉn th·ªã form s·ª≠a s√°ch
            Route::middleware(['canAny:edit_declarations'])->post('/update/{id}', [BookController::class, 'update'])->name('update'); // X·ª≠ l√Ω s·ª≠a s√°ch
            Route::middleware(['canAny:delete_declarations'])->delete('/delete/{id}', [BookController::class, 'delete'])->name('delete'); // X·ª≠ l√Ω x√≥a s√°ch
            Route::middleware(['canAny:edit_declarations'])->get('/autocomplete', [BookController::class, 'autocomplete'])->name('autocomplete'); // L·∫•y s√°ch theo t·ª´
        });

        Route::prefix('book_copies')->name('book_copies.')->group(function () { // Ch·ª©c nƒÉng qu·∫£n l√Ω b·∫£n sao s√°ch
            Route::middleware(['canAny:view_declarations'])->get('/index', [BookCopyController::class, 'index'])->name('index'); // Hi·ªÉn th·ªã danh s√°ch b·∫£n sao s√°ch
            Route::middleware(['canAny:create_declarations'])->get('/create', [BookCopyController::class, 'create'])->name('create'); // Hi·ªÉn th·ªã form t·∫°o m·ªõi b·∫£n sao s√°ch
            Route::middleware(['canAny:create_declarations'])->post('/store', [BookCopyController::class, 'store'])->name('store'); // X·ª≠ l√Ω th√™m m·ªõi b·∫£n sao s√°ch
            Route::middleware(['canAny:edit_declarations'])->get('/edit/{id}', [BookCopyController::class, 'edit'])->name('edit'); // Hi·ªÉn th·ªã form s·ª≠a b·∫£n sao s√°ch
            Route::middleware(['canAny:edit_declarations'])->post('/update/{id}', [BookCopyController::class, 'update'])->name('update'); // X·ª≠ l√Ω s·ª≠a b·∫£n sao s√°ch
            Route::middleware(['canAny:delete_declarations'])->delete('/delete/{id}', [BookCopyController::class, 'delete'])->name('delete'); // X·ª≠ l√Ω x√≥a b·∫£n sao s√°ch
        });

    });
});
